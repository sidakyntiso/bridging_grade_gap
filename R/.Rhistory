print(paste(x,i,sep = ":"))
if((i %% 2) == 0) { #even years
x = x+1
troops$p[troops$year==i&troops$even==1] = x
} else {
troops$p[troops$year==i&troops$even==0] = x
}
}
troops <- subset(troops,!is.na(p))
final_reps <- reps %>%
select(!c(grep("lag_y",colnames(reps)),grep("lead_y",colnames(reps))))
intersect(colnames(troops),colnames(final_reps))
final_reps = final_reps %>%
select(!c(d_occup_,cnt_,m_troops_,year,m_troops_)) %>%
left_join(troops,by = c(  "countyfips","statefips", "p"    ))
final_reps$even=rep(NA,nrow(final_reps))
final_reps$even[final_reps$stateabb %in% c("AL","AR","FL","GA","LA","NC","SC")]=1
final_reps$even[final_reps$stateabb %in% c("TX","MS","VA")]=0
describe(final_reps$ln_m_troops_)
########################################
### Models 1: Diff-in-Diff Estimates ###
########################################
ivs = c("lag_y.d_occup_","lag_y.ln_cnt_","lag_y.ln_m_troops_")
for (i in 1:3 ){
m1 = paste("black_hreps~",ivs[i]," | p + countyfips",sep = "")
m2 = paste("black_hreps~",ivs[i],"+",paste0(controls, collapse = " + ")," | p + countyfips",sep = "")
m3 = paste("black_hreps~",ivs[i]," | int_dist_p + countyfips",sep = "")
m4 = paste("black_hreps~",ivs[i],"+",paste0(controls, collapse = " + ")," | int_dist_p + countyfips",sep = "")
assign(paste("m1",i,sep = ""), feols(as.formula(m1), cluster = c("countyfips"),data = final_reps))
assign(paste("m2",i,sep = ""), feols(as.formula(m2), cluster = c("countyfips"),data = final_reps))
assign(paste("m3",i,sep = ""), feols(as.formula(m3), cluster = c("countyfips"),data = final_reps))
assign(paste("m4",i,sep = ""), feols(as.formula(m4), cluster = c("countyfips"),data = final_reps))
}
etable(m11,m21,m41,tex=T,keep = ivs, digits = 3)
final_reps <- subset(final_reps,!stateabb=="TX")
ivs = c("lag_y.d_occup_","lag_y.ln_cnt_","lag_y.ln_m_troops_")
for (i in 1:3 ){
m1 = paste("black_hreps~",ivs[i]," | p + countyfips",sep = "")
m2 = paste("black_hreps~",ivs[i],"+",paste0(controls, collapse = " + ")," | p + countyfips",sep = "")
m3 = paste("black_hreps~",ivs[i]," | int_dist_p + countyfips",sep = "")
m4 = paste("black_hreps~",ivs[i],"+",paste0(controls, collapse = " + ")," | int_dist_p + countyfips",sep = "")
assign(paste("m1",i,sep = ""), feols(as.formula(m1), cluster = c("countyfips"),data = final_reps))
assign(paste("m2",i,sep = ""), feols(as.formula(m2), cluster = c("countyfips"),data = final_reps))
assign(paste("m3",i,sep = ""), feols(as.formula(m3), cluster = c("countyfips"),data = final_reps))
assign(paste("m4",i,sep = ""), feols(as.formula(m4), cluster = c("countyfips"),data = final_reps))
}
etable(m11,m21,m41,tex=T,keep = ivs, digits = 3)
etable(m11,m21,m41,m12,m22,m42,m13,m23,m43,keep = ivs, digits = 3,tex=T)
= c("lag_y.5","lag_y.4","lag_y.3","lag_y.2",
"",
"lead_y.","lead_y.2","lead_y.3","lead_y.4")
ivs = c("d_occup_","ln_cnt_","ln_m_troops_")
results <- data.frame()
for (i in 1:3 ){
vars = paste(p,ivs[i],sep = "")
form = paste("black_hreps~",paste0(vars,collapse = "+")," | dist_year + p + countyfips",sep = "")
x_model <- feols(as.formula(form), cluster = "countyfips",data = subset(final_reps,p<=5))
# est <- upper <- lower <- rep(NA,length(vars))
# est = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$estimate
# lower = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.low
# upper = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.high
results = plyr::rbind.fill(results,
data.frame(iv = ivs[i],
estimate = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$estimate,
conf.low = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.low,
conf.high =broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.high))
}
results%>%
mutate(t = rep( c(-5:-2,0:4),3)) %>%
bind_rows(tibble(t =-1, estimate = 0, conf.low = 0, conf.high = 0,iv = ivs))  %>%
mutate(treatment = recode(iv,d_occup_  ="Occupied",
ln_cnt_ ="(ln) Military Units",
ln_m_troops_="(ln) Mean Troops")) %>%
#bind_rows(tibble(t =0, estimate = 0, conf.low = 0, conf.high = 0)) %>%
mutate(treatment =factor(treatment,levels = c("Occupied","(ln) Military Units",
"(ln) Mean Troops"))) %>%
select(t, treatment, estimate, conf.low, conf.high) %>%
# plot
ggplot(aes(x = t, y = estimate)) +
geom_point(fill = "white", shape = 21,color="Maroon") + geom_line(color="Maroon")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high),
linetype = "longdash", show.legend = FALSE)+
geom_hline(yintercept = 0,  linetype = "longdash", color = "gray") +
geom_vline(xintercept = -1,  linetype = "longdash", color = "gray") +
ylim(-5,-1) %>%
labs(y = "Effect on Black Representatives", x = "Years Relative to Legislative Session") +
theme_bw()+  facet_wrap(~treatment)+
scale_x_continuous(breaks  = c(-4,-2,0,2,4)) +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
strip.placement = "outside",
strip.background = element_blank(),
strip.text = element_text(size = 12))
p = c("lag_y.5","lag_y.4","lag_y.3","lag_y.2",
"",
"lead_y.","lead_y.2","lead_y.3","lead_y.4")
ivs = c("d_occup_","ln_cnt_","ln_m_troops_")
results <- data.frame()
for (i in 1:3 ){
vars = paste(p,ivs[i],sep = "")
form = paste("black_hreps~",paste0(vars,collapse = "+")," | dist_year + p + countyfips",sep = "")
x_model <- feols(as.formula(form), cluster = "countyfips",data = subset(final_reps,p<=5))
# est <- upper <- lower <- rep(NA,length(vars))
# est = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$estimate
# lower = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.low
# upper = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.high
results = plyr::rbind.fill(results,
data.frame(iv = ivs[i],
estimate = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$estimate,
conf.low = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.low,
conf.high =broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.high))
}
results%>%
mutate(t = rep( c(-5:-2,0:4),3)) %>%
bind_rows(tibble(t =-1, estimate = 0, conf.low = 0, conf.high = 0,iv = ivs))  %>%
mutate(treatment = recode(iv,d_occup_  ="Occupied",
ln_cnt_ ="(ln) Military Units",
ln_m_troops_="(ln) Mean Troops")) %>%
#bind_rows(tibble(t =0, estimate = 0, conf.low = 0, conf.high = 0)) %>%
mutate(treatment =factor(treatment,levels = c("Occupied","(ln) Military Units",
"(ln) Mean Troops"))) %>%
select(t, treatment, estimate, conf.low, conf.high) %>%
# plot
ggplot(aes(x = t, y = estimate)) +
geom_point(fill = "white", shape = 21,color="Maroon") + geom_line(color="Maroon")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high),
linetype = "longdash", show.legend = FALSE)+
geom_hline(yintercept = 0,  linetype = "longdash", color = "gray") +
geom_vline(xintercept = -1,  linetype = "longdash", color = "gray") +
ylim(-5,-1) %>%
labs(y = "Effect on Black Representatives", x = "Years Relative to Legislative Session") +
theme_bw()+  facet_wrap(~treatment)+
scale_x_continuous(breaks  = c(-4,-2,0,2,4)) +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
strip.placement = "outside",
strip.background = element_blank(),
strip.text = element_text(size = 12))
p = c("lag_y.5","lag_y.4","lag_y.3","lag_y.2",
"",
"lead_y.","lead_y.2","lead_y.3","lead_y.4")
ivs = c("d_occup_","ln_cnt_","ln_m_troops_")
results <- data.frame()
for (i in 1:3 ){
vars = paste(p,ivs[i],sep = "")
form = paste("black_hreps~",paste0(vars,collapse = "+")," | int_dist_p + p + countyfips",sep = "")
x_model <- feols(as.formula(form), cluster = "countyfips",data = subset(final_reps,p<=5))
# est <- upper <- lower <- rep(NA,length(vars))
# est = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$estimate
# lower = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.low
# upper = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.high
results = plyr::rbind.fill(results,
data.frame(iv = ivs[i],
estimate = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$estimate,
conf.low = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.low,
conf.high =broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.high))
}
results%>%
mutate(t = rep( c(-5:-2,0:4),3)) %>%
bind_rows(tibble(t =-1, estimate = 0, conf.low = 0, conf.high = 0,iv = ivs))  %>%
mutate(treatment = recode(iv,d_occup_  ="Occupied",
ln_cnt_ ="(ln) Military Units",
ln_m_troops_="(ln) Mean Troops")) %>%
#bind_rows(tibble(t =0, estimate = 0, conf.low = 0, conf.high = 0)) %>%
mutate(treatment =factor(treatment,levels = c("Occupied","(ln) Military Units",
"(ln) Mean Troops"))) %>%
select(t, treatment, estimate, conf.low, conf.high) %>%
# plot
ggplot(aes(x = t, y = estimate)) +
geom_point(fill = "white", shape = 21,color="Maroon") + geom_line(color="Maroon")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high),
linetype = "longdash", show.legend = FALSE)+
geom_hline(yintercept = 0,  linetype = "longdash", color = "gray") +
geom_vline(xintercept = -1,  linetype = "longdash", color = "gray") +
ylim(-5,-1) %>%
labs(y = "Effect on Black Representatives", x = "Years Relative to Legislative Session") +
theme_bw()+  facet_wrap(~treatment)+
scale_x_continuous(breaks  = c(-4,-2,0,2,4)) +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
strip.placement = "outside",
strip.background = element_blank(),
strip.text = element_text(size = 12))
p = c("lag_y.9","lag_y.8","lag_y.7","lag_y.6","lag_y.5","lag_y.4","lag_y.3","lag_y.2",
"",
"lead_y.","lead_y.2","lead_y.3","lead_y.4","lead_y.5","lead_y.6","lead_y.7","lead_y.8")
ivs = c("d_occup_","ln_cnt_","ln_m_troops_")
results <- data.frame()
for (i in 1:3 ){
vars = paste(p,ivs[i],sep = "")
form = paste("black_hreps~",paste0(vars,collapse = "+")," | int_dist_p + p + countyfips",sep = "")
x_model <- feols(as.formula(form), cluster = "countyfips",data = subset(final_reps,p<=5))
# est <- upper <- lower <- rep(NA,length(vars))
# est = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$estimate
# lower = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.low
# upper = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.high
results = plyr::rbind.fill(results,
data.frame(iv = ivs[i],
estimate = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$estimate,
conf.low = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.low,
conf.high =broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.high))
}
results%>%
mutate(t = rep( c(-5:-2,0:4),3)) %>%
bind_rows(tibble(t =-1, estimate = 0, conf.low = 0, conf.high = 0,iv = ivs))  %>%
mutate(treatment = recode(iv,d_occup_  ="Occupied",
ln_cnt_ ="(ln) Military Units",
ln_m_troops_="(ln) Mean Troops")) %>%
#bind_rows(tibble(t =0, estimate = 0, conf.low = 0, conf.high = 0)) %>%
mutate(treatment =factor(treatment,levels = c("Occupied","(ln) Military Units",
"(ln) Mean Troops"))) %>%
select(t, treatment, estimate, conf.low, conf.high) %>%
# plot
ggplot(aes(x = t, y = estimate)) +
geom_point(fill = "white", shape = 21,color="Maroon") + geom_line(color="Maroon")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high),
linetype = "longdash", show.legend = FALSE)+
geom_hline(yintercept = 0,  linetype = "longdash", color = "gray") +
geom_vline(xintercept = -1,  linetype = "longdash", color = "gray") +
ylim(-5,-1) %>%
labs(y = "Effect on Black Representatives", x = "Years Relative to Legislative Session") +
theme_bw()+  facet_wrap(~treatment)+
scale_x_continuous(breaks  = c(-4,-2,0,2,4)) +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
strip.placement = "outside",
strip.background = element_blank(),
strip.text = element_text(size = 12))
final_reps$lag_9vars
vars
vars %in% colnames(final_reps)
table(vars %in% colnames(final_reps))
print(table(vars %in% colnames(final_reps)))
for (i in 1:3 ){
vars = paste(p,ivs[i],sep = "")
print(table(vars %in% colnames(final_reps)))
}
results <- data.frame()
for (i in 1:3 ){
vars = paste(p,ivs[i],sep = "")
form = paste("black_hreps~",paste0(vars,collapse = "+")," | int_dist_p + p + countyfips",sep = "")
x_model <- feols(as.formula(form), cluster = "countyfips",data = subset(final_reps,p<=5))
# est <- upper <- lower <- rep(NA,length(vars))
# est = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$estimate
# lower = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.low
# upper = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.high
results = plyr::rbind.fill(results,
data.frame(iv = ivs[i],
estimate = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$estimate,
conf.low = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.low,
conf.high =broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.high))
}
p = c("lag_y.8","lag_y.7","lag_y.6","lag_y.5","lag_y.4","lag_y.3","lag_y.2",
"",
"lead_y.","lead_y.2","lead_y.3","lead_y.4","lead_y.5","lead_y.6","lead_y.7")
ivs = c("d_occup_","ln_cnt_","ln_m_troops_")
results <- data.frame()
for (i in 1:3 ){
vars = paste(p,ivs[i],sep = "")
form = paste("black_hreps~",paste0(vars,collapse = "+")," | int_dist_p + p + countyfips",sep = "")
x_model <- feols(as.formula(form), cluster = "countyfips",data = subset(final_reps,p<=5))
# est <- upper <- lower <- rep(NA,length(vars))
# est = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$estimate
# lower = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.low
# upper = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.high
results = plyr::rbind.fill(results,
data.frame(iv = ivs[i],
estimate = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$estimate,
conf.low = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.low,
conf.high =broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.high))
}
p = c("lag_y.7","lag_y.6","lag_y.5","lag_y.4","lag_y.3","lag_y.2",
"",
"lead_y.","lead_y.2","lead_y.3","lead_y.4","lead_y.5","lead_y.6")
ivs = c("d_occup_","ln_cnt_","ln_m_troops_")
results <- data.frame()
for (i in 1:3 ){
vars = paste(p,ivs[i],sep = "")
form = paste("black_hreps~",paste0(vars,collapse = "+")," | int_dist_p + p + countyfips",sep = "")
x_model <- feols(as.formula(form), cluster = "countyfips",data = subset(final_reps,p<=5))
# est <- upper <- lower <- rep(NA,length(vars))
# est = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$estimate
# lower = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.low
# upper = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.high
results = plyr::rbind.fill(results,
data.frame(iv = ivs[i],
estimate = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$estimate,
conf.low = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.low,
conf.high =broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.high))
}
p = c("lag_y.6","lag_y.5","lag_y.4","lag_y.3","lag_y.2",
"",
"lead_y.","lead_y.2","lead_y.3","lead_y.4","lead_y.5")
ivs = c("d_occup_","ln_cnt_","ln_m_troops_")
results <- data.frame()
for (i in 1:3 ){
vars = paste(p,ivs[i],sep = "")
form = paste("black_hreps~",paste0(vars,collapse = "+")," | int_dist_p + p + countyfips",sep = "")
x_model <- feols(as.formula(form), cluster = "countyfips",data = subset(final_reps,p<=5))
# est <- upper <- lower <- rep(NA,length(vars))
# est = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$estimate
# lower = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.low
# upper = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.high
results = plyr::rbind.fill(results,
data.frame(iv = ivs[i],
estimate = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$estimate,
conf.low = broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.low,
conf.high =broom::tidy(x_model, conf.int = TRUE, se = 'cluster')$conf.high))
}
c(-6:-2,0:6)
p
vars
results%>%
mutate(t = rep( c(-6:-2,0:5),3)) %>%
bind_rows(tibble(t =-1, estimate = 0, conf.low = 0, conf.high = 0,iv = ivs))  %>%
mutate(treatment = recode(iv,d_occup_  ="Occupied",
ln_cnt_ ="(ln) Military Units",
ln_m_troops_="(ln) Mean Troops")) %>%
#bind_rows(tibble(t =0, estimate = 0, conf.low = 0, conf.high = 0)) %>%
mutate(treatment =factor(treatment,levels = c("Occupied","(ln) Military Units",
"(ln) Mean Troops"))) %>%
select(t, treatment, estimate, conf.low, conf.high) %>%
# plot
ggplot(aes(x = t, y = estimate)) +
geom_point(fill = "white", shape = 21,color="Maroon") + geom_line(color="Maroon")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high),
linetype = "longdash", show.legend = FALSE)+
geom_hline(yintercept = 0,  linetype = "longdash", color = "gray") +
geom_vline(xintercept = -1,  linetype = "longdash", color = "gray") +
ylim(-5,-1) %>%
labs(y = "Effect on Black Representatives", x = "Years Relative to Legislative Session") +
theme_bw()+  facet_wrap(~treatment)+
scale_x_continuous(breaks  = c(-4,-2,0,2,4)) +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
strip.placement = "outside",
strip.background = element_blank(),
strip.text = element_text(size = 12))
results%>%
mutate(t = rep( c(-6:-2,0:5),3)) %>%
bind_rows(tibble(t =-1, estimate = 0, conf.low = 0, conf.high = 0,iv = ivs))  %>%
mutate(treatment = recode(iv,d_occup_  ="Occupied",
ln_cnt_ ="(ln) Military Units",
ln_m_troops_="(ln) Mean Troops")) %>%
#bind_rows(tibble(t =0, estimate = 0, conf.low = 0, conf.high = 0)) %>%
mutate(treatment =factor(treatment,levels = c("Occupied","(ln) Military Units",
"(ln) Mean Troops"))) %>%
select(t, treatment, estimate, conf.low, conf.high) %>%
# plot
ggplot(aes(x = t, y = estimate)) +
geom_point(fill = "white", shape = 21,color="Maroon") + geom_line(color="Maroon")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high),
linetype = "longdash", show.legend = FALSE)+
geom_hline(yintercept = 0,  linetype = "longdash", color = "gray") +
geom_vline(xintercept = -1,  linetype = "longdash", color = "gray") +
ylim(-5,-1) %>%
labs(y = "Effect on Black Representatives", x = "Years Relative to Legislative Session") +
theme_bw()+  facet_wrap(~treatment)+
scale_x_continuous(breaks  = c(-6,-4,-2,0,2,4,6)) +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
strip.placement = "outside",
strip.background = element_blank(),
strip.text = element_text(size = 12))
ggsave(file=paste("C:\\Users\\Sidak Yntiso\\Downloads\\event_study.pdf",sep = ""),
plot = last_plot(),width = 30, height = 15, units = "cm")
length(p)
plot(c(1:100),c(1:100))
plot(c(1:100),c(1:100))
dev.off()
plot(c(1:100),c(1:100))
ev.off()
dev.off()
plot(rnorm(50), rnorm(50))
getOption("device") a
getOption("device")
ptions(device = "RStudioGD")
options(device = "RStudioGD")
options(device = "RStudioGD")
options(device = "RStudioGD")
plot(rnorm(50), rnorm(50))
sample(c(1:30))
c(1:30)
c(1:30)[1:15]
sample(c(1:30))[1:15]
sample(c(15:29))
cbind(c(1:14), sample(c(15:29)))
cbind(c(1:15), sample(c(15:29)))
cbind(c(1:15), sample(c(15:29)))
cbind(c(1:15), sample(c(15:29)))
choose(43,30)
??bridgr.eval.bias
??bridgr.eval.bias
rm(list = ls())
localdir = "C:/Users/Sidak Yntiso/Dropbox/Grading Bias/bridgr/R/"
setwd("C:/Users/Sidak Yntiso/Dropbox/Grading Bias/bridgr/R/")
remove.packages("bridgr")
devtools::document()
devtools::install()
#hit Ctrl Shift F10
library(bridgr)
??bridgr.eval.bias
library(bridgr)
data(simdata_five)
data("simdata_five")
simdata_five <- readRDS("C:/Users/Sidak Yntiso/Dropbox/Grading Bias/bridgr/data/simdata_five.rds")
save("C:/Users/Sidak Yntiso/Dropbox/Grading Bias/bridgr/data/simdata_five.RData")
save(simdata_five,"C:/Users/Sidak Yntiso/Dropbox/Grading Bias/bridgr/data/simdata_five.RData")
save(simdata_five,file = "C:/Users/Sidak Yntiso/Dropbox/Grading Bias/bridgr/data/simdata_five.RData")
data("simdata_five")
rm(list = ls())
localdir = "C:/Users/Sidak Yntiso/Dropbox/Grading Bias/bridgr/R/"
setwd("C:/Users/Sidak Yntiso/Dropbox/Grading Bias/bridgr/R/")
remove.packages("bridgr")
devtools::document()
devtools::install()
#hit Ctrl Shift F10
library(bridgr)
??bridgr.eval.bias
data("simdata_five")
head(simdata_five)
bridgr.eval.bias(df=simdata_five,plot=T,tbl=T)
results = bridgr(df = simdata_five)
rm(list = ls())
localdir = "C:/Users/Sidak Yntiso/Dropbox/Grading Bias/bridgr/R/"
setwd("C:/Users/Sidak Yntiso/Dropbox/Grading Bias/bridgr/R/")
remove.packages("bridgr")
devtools::document()
devtools::install()
#hit Ctrl Shift F10
library(bridgr)
??bridgr.eval.bias
data("simdata_five")
bridgr.eval.bias(df=simdata_five,plot=T,tbl=T)
results = bridgr(df = simdata_five)
results = bridgr(df = simdata_five)
rm(list = ls())
localdir = "C:/Users/Sidak Yntiso/Dropbox/Grading Bias/bridgr/R/"
setwd("C:/Users/Sidak Yntiso/Dropbox/Grading Bias/bridgr/R/")
remove.packages("bridgr")
devtools::document()
devtools::install()
#hit Ctrl Shift F10
library(bridgr)
??bridgr.eval.bias
rm(list = ls())
localdir = "C:/Users/Sidak Yntiso/Dropbox/Grading Bias/bridgr/R/"
setwd("C:/Users/Sidak Yntiso/Dropbox/Grading Bias/bridgr/R/")
remove.packages("bridgr")
devtools::document()
devtools::install()
#hit Ctrl Shift F10
library(bridgr)
??bridgr.eval.bias
results = bridgr::bridgr(df = simdata_five)
bridgr.eval.post(bridgr.results = results)
results = bridgr(df = simdata_five)
grading.bias.post = bridgr.eval.post(bridgr.results = results)
results = bridgr(df = simdata_five)
grading.bias.post = bridgr.eval.post(bridgr.results = results)
results = bridgr(df = simdata_five)
grading.bias.post = bridgr.eval.post(bridgr.results = results)
results = bridgr(df = simdata_five)
grading.bias.post = bridgr.eval.post(bridgr.results = results)
results = bridgr(df = simdata_five)
grading.bias.post = bridgr.eval.post(bridgr.results = results)
results = bridgr(df = simdata_five)
grading.bias.post = bridgr.eval.post(bridgr.results = results)
results = bridgr(df = simdata_five)
grading.bias.post = bridgr.eval.post(bridgr.results = results)
results = bridgr(df = simdata_five)
grading.bias.post = bridgr.eval.post(bridgr.results = results)
results = bridgr(df = simdata_five)
grading.bias.post = bridgr.eval.post(bridgr.results = results)
results = bridgr(df = simdata_five)
grading.bias.post = bridgr.eval.post(bridgr.results = results)
results = bridgr(df = simdata_five)
#grading.bias.post = bridgr.eval.post(bridgr.results = results)
results = bridgr(df = simdata_five)
results = bridgr(df = simdata_five)
#grading.bias.post = bridgr.eval.post(bridgr.results = results)
library(rstan)
results = bridgr(df = simdata_five)
#grading.bias.post = bridgr.eval.post(bridgr.results = results)
library(rstan)
results = bridgr(df = simdata_five)
#grading.bias.post = bridgr.eval.post(bridgr.results = results)
final = read.csv("C:\\Users\\Sidak Yntiso\\final_reduced.csv")
save(final,file="C:\\Users\\Sidak Yntiso\\Downloads\\finaldata.RDATA")
DA_directory <- readxl::read_excel("C:\\Users\\Sidak Yntiso\\Dropbox\\Sentencing Data\\Texas\\CJIS\\ORIs\\texas_state_directory.xlsx")
View(DA_directory)
dir <- "C:\\Users\\Sidak Yntiso\\Dropbox\\Sentencing Data\\Texas\\Elections\\"
load( paste(dir,"da_returns.RDA",sep = ""))
#supplemental retruns
supplemental_returns <- readxl::read_excel(paste(dir,"more_election_returns.xlsx",sep=""))
supplemental_returns=supplemental_returns[,c(1:10)]
supplemental_returns$vote_share[is.na(supplemental_returns$vote_share)]=0
#collapse to district-year level
supplemental_returns <- supplemental_returns %>%
group_by(district,year) %>% mutate(max_vote_share = max(vote_share,na.rm = T))
supplemental_returns <- subset(supplemental_returns,
vote_share==max_vote_share)
supplemental_returns$vote_share[supplemental_returns$vote_share==0]=NA
supplemental_returns$max_vote_share <- NULL
supplemental_returns <- supplemental_returns[!duplicated(supplemental_returns),]
tx_da <- plyr::rbind.fill(tx_da,supplemental_returns)
tx_da <- tx_da[!(tx_da$district=="Robertson County"&
tx_da$year==2016&is.na(tx_da$cand)),]
View(tx_da)
View(DA_directory)
10.94-7
10.94-7.11
